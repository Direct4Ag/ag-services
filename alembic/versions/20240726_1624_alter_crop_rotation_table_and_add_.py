"""alter crop rotation table and add fertilizers table

Revision ID: 0330e4697600
Revises: 558cd9fe79bc
Create Date: 2024-07-26 16:24:46.985488+00:00

"""

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision = "0330e4697600"
down_revision = "558cd9fe79bc"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "fertilizer",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("fertilizer_date", sa.Date(), nullable=False),
        sa.Column("fertilizer_rate", sa.Float(), nullable=False),
        sa.Column("fertilizer_rate_unit", sa.String(length=50), nullable=False),
        sa.Column("fertilizer_type", sa.String(length=200), nullable=False),
        sa.Column("fertilizer_application_description", sa.Text(), nullable=False),
        sa.Column("crop_rot_ref_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["crop_rot_ref_id"],
            ["crop_rotation.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.add_column(
        "crop_rotation",
        sa.Column("total_fertilizer_applied", sa.Float(), nullable=True),
    )
    op.add_column(
        "crop_rotation",
        sa.Column("total_fertilizer_applied_unit", sa.String(length=50), nullable=True),
    )
    op.drop_column("crop_rotation", "fertilizer_application")
    op.add_column(
        "drought_resistant_seed_yield",
        sa.Column("yield_unit", sa.String(length=50), nullable=True),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("drought_resistant_seed_yield", "yield_unit")
    op.add_column(
        "crop_rotation",
        sa.Column(
            "fertilizer_application", sa.TEXT(), autoincrement=False, nullable=True
        ),
    )
    op.drop_column("crop_rotation", "total_fertilizer_applied_unit")
    op.drop_column("crop_rotation", "total_fertilizer_applied")
    op.drop_table("fertilizer")
    # ### end Alembic commands ###
